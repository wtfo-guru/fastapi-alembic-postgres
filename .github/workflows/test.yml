name: Fast Api Alembic Sqlalchemy CI
# Run this job on pushes to `main`, and for pull requests. If you don't specify
# `branches: [main], then this actions runs _twice_ on pull requests, which is
# annoying.

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  # Label of the runner job
  runner-job:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
    # Service containers to run with `runner-job`
    # services:
    #   # Label used to access the service container
    #   postgres:
    #     # Docker Hub image
    #     image: postgres:14.5-alpine
    #     # Provide the password for postgres
    #     env:
    #       POSTGRES_DB: quotes
    #       POSTGRES_PASSWORD: secret
    #       POSTGRES_PORT: 5432
    #       POSTGRES_USER: dbo
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       # Maps tcp port 5432 on service container to the host
    #       - 5432:5432

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: "1.5.1"
        virtualenvs-in-project: true

    - name: Set up cache
      uses: actions/cache@v3
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-py-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

    - name: Install dependencies
      run: poetry install --no-interaction

    - name: Run checks
      env:
        APP_ENV: test
        FIRST_SUPERUSER: "admin:secret"
        DATABASE_URL: "sqlite:///dbtest.db"
        SECRET_KEY: 076B50981E6BAAD34E86D5D632AA9D6AB0D79F3E757928B2C161458DE20B7DC2
      run: |
        make prestart
        make test

    # Upload coverage to codecov: https://codecov.io/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
